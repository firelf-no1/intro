daniel12345
204049480
Daniel Lemberger

I discussed the exercise with: nobody
Internet pages i use:
https://docs.python.org/3.6/library/itertools.html#itertools.combinations

=============================
= README for ex10: =
=============================


==================
= Description: =
==================

In this exercise I practiced using Decision Tree.

In the first part of the exercise I built for a predetermined decision tree,
the following functions:

1. function that uses the root of the self-saved decision tree, receives a
list of symptoms, and returns an illness that is on a leaf whose path
corresponds to the symptoms.
1a. Recursive function that progresses towards a specific leaf according to
the presence/absence of symptoms in the symptom list.

2. function that receives a list of records and returns the ratio between the
number of errors (discrepancy between the disease listed in the record and the
disease that the function "diagnose" returns for the list of symptoms of the
record) and the number of records.

3. function that uses the root of the self-saved decision tree, and return a
list of all the illnesses that are stored on the tree leaves.
3a. A recursive function that passes through all the paths to all the leaves
in the tree.

4. function that receives a list of records and returns the illness that
function diagnose will return most often for the symptom lists in the records.
4a. function that receives a dictionary and a illness. if the illness is in
the dictionary, the function will add 1 to its value, else, it add to its
value 1. The function returns the updated dictionary.
4b. function that receives a dictionary. In each cell, the key is the name of
a illness and the value is a number. The function will return the name of the
illness with the highest value.

5. function that receives a name of a illness, and with the root of the
self-saved decision tree, it returns all paths to leaves with the name of the
illness (as a True \ False list).
5a. Recursive function that reaches all the leaves in the tree of the received
root. If the illness received is saved in the leaf, the function will save the
path to the leaf. The function returns a list of all the above paths.



In the second part, I built a new decision tree with the following functions:

6. function that receives a list of records and a list of symptoms.
    The function will construct a tree, so that each path from the root
    to each of the leaves will be asked for all the symptoms in the symptom
    list. In the tree, there are all possible paths for True \ False answers
    to each of the symptoms. For each path, the function will check with
    the appropriate records for this path, which illness is the most common,
    and the same illness will define in the leaf at the end of the path.

6a. Recursive function that builds a tree with all possible paths for
    True \ False answers to each of the symptoms. The function receives
    at each stage the stage at which it is located and the list of symptoms.

6b. function that uses the paths_to_illness function with the word
    "illness", which returns all the paths to the illness it receives,
    and thus our function returns all the paths in the tree. (At this stage,
    all the leaves in the tree are marked "illness").

6c. function that receives a boolean list that represents a path, a list of
    records, a list of symptoms and a tree root. The function will check which
    records correspond to the path (if for a particular symptom, the path is
    written False but the symptom is in the record, or True, but it is not in
    the record, the record is not appropriate). The illness in the appropriate
    records, the function will enter the dictionary as keys, so the value
    of each key is the number of times the illness has been adapted.

6d. recursive function that receives a node, a boolean list, and a stage in
the path, and moves towards the node at the end of the path according to the
True \ False at each stage.


7. function that receives a list of records, a list of symptoms and a number
depth- smaller than the size of the list of symptoms. The function returns a
list of depth symptoms from the symptom list. The symptoms in this list will
have a smaller error percentage in the calculate_error_rate function than any
other combination of symptoms of size depth from the symptom list

